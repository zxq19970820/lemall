<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzl.lemall.mapper.GoodMapper">
    <resultMap id="BaseResultMap" type="com.zzzl.lemall.domain.Good">
        <id column="good_id" jdbcType="INTEGER" property="goodId"/>
        <result column="good_name" jdbcType="VARCHAR" property="goodName"/>
        <result column="good_current_price" jdbcType="DECIMAL" property="goodCurrentPrice"/>
        <result column="good_original_price" jdbcType="DECIMAL" property="goodOriginalPrice"/>
        <result column="good_describe" jdbcType="VARCHAR" property="goodDescribe"/>
        <result column="good_inventory" jdbcType="INTEGER" property="goodInventory"/>
        <result column="good_sale" jdbcType="INTEGER" property="goodSale"/>
        <result column="good_state" jdbcType="VARCHAR" property="goodState"/>
        <result column="good_up_date" jdbcType="TIMESTAMP" property="goodUpDate"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="vendor_id" jdbcType="INTEGER" property="VendorId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    good_id, good_name, good_current_price, good_original_price, good_describe, good_inventory, 
    good_sale, good_state, good_up_date, category_id
  </sql>
    <select id="selectByExample" parameterType="com.zzzl.lemall.domain.GoodExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from good
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from good
        where good_id = #{goodId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where good_id = #{goodId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.zzzl.lemall.domain.GoodExample">
        delete from good
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="com.zzzl.lemall.domain.Good">
    insert into good (good_id, good_name, good_current_price,
      good_original_price, good_describe, good_inventory, 
      good_sale, good_state, good_up_date, 
      category_id)
    values (#{goodId,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}, #{goodCurrentPrice,jdbcType=DECIMAL}, 
      #{goodOriginalPrice,jdbcType=DECIMAL}, #{goodDescribe,jdbcType=VARCHAR}, #{goodInventory,jdbcType=INTEGER}, 
      #{goodSale,jdbcType=INTEGER}, #{goodState,jdbcType=VARCHAR}, #{goodUpDate,jdbcType=TIMESTAMP}, 
      #{categoryId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zzzl.lemall.domain.Good">
        insert into good
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodId != null">
                good_id,
            </if>
            <if test="goodName != null">
                good_name,
            </if>
            <if test="goodCurrentPrice != null">
                good_current_price,
            </if>
            <if test="goodOriginalPrice != null">
                good_original_price,
            </if>
            <if test="goodDescribe != null">
                good_describe,
            </if>
            <if test="goodInventory != null">
                good_inventory,
            </if>
            <if test="goodSale != null">
                good_sale,
            </if>
            <if test="goodState != null">
                good_state,
            </if>
            <if test="goodUpDate != null">
                good_up_date,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodId != null">
                #{goodId,jdbcType=INTEGER},
            </if>
            <if test="goodName != null">
                #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="goodCurrentPrice != null">
                #{goodCurrentPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodOriginalPrice != null">
                #{goodOriginalPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodDescribe != null">
                #{goodDescribe,jdbcType=VARCHAR},
            </if>
            <if test="goodInventory != null">
                #{goodInventory,jdbcType=INTEGER},
            </if>
            <if test="goodSale != null">
                #{goodSale,jdbcType=INTEGER},
            </if>
            <if test="goodState != null">
                #{goodState,jdbcType=VARCHAR},
            </if>
            <if test="goodUpDate != null">
                #{goodUpDate,jdbcType=TIMESTAMP},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.zzzl.lemall.domain.GoodExample" resultType="java.lang.Long">
        select count(*) from good
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update good
        <set>
            <if test="record.goodId != null">
                good_id = #{record.goodId,jdbcType=INTEGER},
            </if>
            <if test="record.goodName != null">
                good_name = #{record.goodName,jdbcType=VARCHAR},
            </if>
            <if test="record.goodCurrentPrice != null">
                good_current_price = #{record.goodCurrentPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.goodOriginalPrice != null">
                good_original_price = #{record.goodOriginalPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.goodDescribe != null">
                good_describe = #{record.goodDescribe,jdbcType=VARCHAR},
            </if>
            <if test="record.goodInventory != null">
                good_inventory = #{record.goodInventory,jdbcType=INTEGER},
            </if>
            <if test="record.goodSale != null">
                good_sale = #{record.goodSale,jdbcType=INTEGER},
            </if>
            <if test="record.goodState != null">
                good_state = #{record.goodState,jdbcType=VARCHAR},
            </if>
            <if test="record.goodUpDate != null">
                good_up_date = #{record.goodUpDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update good
        set good_id = #{record.goodId,jdbcType=INTEGER},
        good_name = #{record.goodName,jdbcType=VARCHAR},
        good_current_price = #{record.goodCurrentPrice,jdbcType=DECIMAL},
        good_original_price = #{record.goodOriginalPrice,jdbcType=DECIMAL},
        good_describe = #{record.goodDescribe,jdbcType=VARCHAR},
        good_inventory = #{record.goodInventory,jdbcType=INTEGER},
        good_sale = #{record.goodSale,jdbcType=INTEGER},
        good_state = #{record.goodState,jdbcType=VARCHAR},
        good_up_date = #{record.goodUpDate,jdbcType=TIMESTAMP},
        category_id = #{record.categoryId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zzzl.lemall.domain.Good">
        update good
        <set>
            <if test="goodName != null">
                good_name = #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="goodCurrentPrice != null">
                good_current_price = #{goodCurrentPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodOriginalPrice != null">
                good_original_price = #{goodOriginalPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodDescribe != null">
                good_describe = #{goodDescribe,jdbcType=VARCHAR},
            </if>
            <if test="goodInventory != null">
                good_inventory = #{goodInventory,jdbcType=INTEGER},
            </if>
            <if test="goodSale != null">
                good_sale = #{goodSale,jdbcType=INTEGER},
            </if>
            <if test="goodState != null">
                good_state = #{goodState,jdbcType=VARCHAR},
            </if>
            <if test="goodUpDate != null">
                good_up_date = #{goodUpDate,jdbcType=TIMESTAMP},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
        </set>
        where good_id = #{goodId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zzzl.lemall.domain.Good">
    update good
    set good_name = #{goodName,jdbcType=VARCHAR},
      good_current_price = #{goodCurrentPrice,jdbcType=DECIMAL},
      good_original_price = #{goodOriginalPrice,jdbcType=DECIMAL},
      good_describe = #{goodDescribe,jdbcType=VARCHAR},
      good_inventory = #{goodInventory,jdbcType=INTEGER},
      good_sale = #{goodSale,jdbcType=INTEGER},
      good_state = #{goodState,jdbcType=VARCHAR},
      good_up_date = #{goodUpDate,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>


    <!--  自定义部分-->
    <resultMap id="map1" type="com.zzzl.lemall.domain.Good">
        <id column="good_id" jdbcType="INTEGER" property="goodId"/>
        <result column="good_name" jdbcType="VARCHAR" property="goodName"/>
        <result column="good_current_price" jdbcType="DECIMAL" property="goodCurrentPrice"/>
        <result column="good_original_price" jdbcType="DECIMAL" property="goodOriginalPrice"/>
        <result column="good_describe" jdbcType="VARCHAR" property="goodDescribe"/>
        <result column="good_inventory" jdbcType="INTEGER" property="goodInventory"/>
        <result column="good_sale" jdbcType="INTEGER" property="goodSale"/>
        <result column="good_state" jdbcType="VARCHAR" property="goodState"/>
        <result column="good_up_date" jdbcType="TIMESTAMP" property="goodUpDate"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="vendor_id" property="VendorId"/>

        <association property="pictureLocation" javaType="com.zzzl.lemall.domain.GoodDetails">
            <id column="good_details_id" jdbcType="INTEGER" property="goodDetailsId"/>
            <result column="good_details_igm" jdbcType="VARCHAR" property="goodDetailsIgm"/>
            <result column="good_id" jdbcType="INTEGER" property="goodId"/>
        </association>
    </resultMap>


    <select id="selectGoodsByTitle" resultMap="map1">
    SELECT g.*,gd.good_Details_igm
    FROM category c
    LEFT JOIN good g
    on c.category_id=g.category_Id
    LEFT JOIN good_Details  gd
    on g.good_Id=gd.good_Id
    WHERE c.category_Name=#{title}
    order by g.good_sale desc
  </select>


    <select id="selectGoodsByValues" resultMap="map1">
    SELECT  g.*,gd.good_details_igm
    FROM good g
    LEFT JOIN good_details gd
    on g.good_id=gd.good_id
    WHERE g.good_name like #{value}
  </select>


    <select id="selectGoodById" resultMap="map1">
        select *
        from good
        where good_id=#{id}
  </select>

    <select id="selectByVendorId" resultMap="map1">
      select *
      FROM good g
      LEFT JOIN good_details gd
      on g.good_id=gd.good_id
      WHERE g.vendor_id=#{id}
       and g.good_state=1

  </select>
    <select id="selectGoodsByName" resultMap="map1">
      select *
      FROM good g
      LEFT JOIN good_details gd
      on g.good_id=gd.good_id
      WHERE g.vendor_id=#{id}
      and  g.good_name like #{name}
      and g.good_state=1
    </select>


    <select id="findTopFiveGood" resultMap="map1">
     select *
      FROM good
      order by good_sale desc
      limit 0,5
    </select>




    <delete id="deleteGoodById">
        update good
        set good.good_state=0
        where good.good_id=#{id}
    </delete>


    <update id="UpdateGoodById">
        update good
        <set>
            <if test="goodName!=null">
                good_name = #{goodName},
            </if>
            <if test="goodCurrentPrice!=null">
                good_current_price = #{goodCurrentPrice},
            </if>
            <if test="goodDescribe!=null">
                good_describe = #{goodDescribe},
            </if>
            <if test="goodInventory!=null">
                good_inventory = #{goodInventory},
            </if>
        </set>
        where good_id=#{goodId}

    </update>

    <update id="delInIds">
        update good
         set good_state=0
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open="and good_id in(" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>


    </update>


    <insert id="addGood" parameterType="com.zzzl.lemall.domain.User">
        <!-- 配置保存时获取插入的 id -->
        <selectKey keyColumn="good_id" keyProperty="goodId" resultType="integer">
            select last_insert_id();
        </selectKey>
        insert into good(good_name,good_current_price,good_inventory,good_describe,vendor_id,good_up_date,good_state)
        values (#{goodName},#{goodCurrentPrice},#{goodInventory},#{goodDescribe},#{vendorId},#{goodUpDate},#{goodState})
    </insert>
    <insert id="addGOODImg">
        insert into good_details (good_details_igm,good_id)
        value (#{pictureLocation.goodDetailsIgm},#{goodId})
    </insert>


</mapper>