<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzl.lemall.mapper.PropertyMapper">
  <resultMap id="BaseResultMap" type="com.zzzl.lemall.domain.Property">
    <id column="prop_id" jdbcType="INTEGER" property="propId" />
    <result column="prop_name" jdbcType="VARCHAR" property="propName" />
    <result column="g_id" jdbcType="INTEGER" property="gId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prop_id, prop_name, g_id
  </sql>
  <select id="selectByExample" parameterType="com.zzzl.lemall.domain.PropertyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from property
    where prop_id = #{propId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from property
    where prop_id = #{propId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzzl.lemall.domain.PropertyExample">
    delete from property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzzl.lemall.domain.Property">
    insert into property (prop_id, prop_name, g_id
      )
    values (#{propId,jdbcType=INTEGER}, #{propName,jdbcType=VARCHAR}, #{gId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzzl.lemall.domain.Property">
    insert into property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="propId != null">
        prop_id,
      </if>
      <if test="propName != null">
        prop_name,
      </if>
      <if test="gId != null">
        g_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="propId != null">
        #{propId,jdbcType=INTEGER},
      </if>
      <if test="propName != null">
        #{propName,jdbcType=VARCHAR},
      </if>
      <if test="gId != null">
        #{gId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzzl.lemall.domain.PropertyExample" resultType="java.lang.Long">
    select count(*) from property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update property
    <set>
      <if test="record.propId != null">
        prop_id = #{record.propId,jdbcType=INTEGER},
      </if>
      <if test="record.propName != null">
        prop_name = #{record.propName,jdbcType=VARCHAR},
      </if>
      <if test="record.gId != null">
        g_id = #{record.gId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update property
    set prop_id = #{record.propId,jdbcType=INTEGER},
      prop_name = #{record.propName,jdbcType=VARCHAR},
      g_id = #{record.gId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzzl.lemall.domain.Property">
    update property
    <set>
      <if test="propName != null">
        prop_name = #{propName,jdbcType=VARCHAR},
      </if>
      <if test="gId != null">
        g_id = #{gId,jdbcType=INTEGER},
      </if>
    </set>
    where prop_id = #{propId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzzl.lemall.domain.Property">
    update property
    set prop_name = #{propName,jdbcType=VARCHAR},
      g_id = #{gId,jdbcType=INTEGER}
    where prop_id = #{propId,jdbcType=INTEGER}
  </update>


<!--  自定义-->

  <resultMap id="map1" type="com.zzzl.lemall.domain.Property">
    <id column="prop_id" jdbcType="INTEGER" property="propId" />
    <result property="propName" column="prop_name"/>
    <result property="gId" column="g_id"/>

    <collection property="valuess" ofType="com.zzzl.lemall.domain.Valuess">
      <id column="val_id" jdbcType="INTEGER" property="valId" />

      <result column="val_content" jdbcType="VARCHAR" property="valContent" />
      <result column="val_img" jdbcType="VARCHAR" property="valImg" />
      <result column="prop_id" jdbcType="INTEGER" property="propId" />
    </collection>

  </resultMap>



  <select id="getPropertyByGoodId" resultMap="map1">
    SELECT  p.prop_id,p.prop_name,v.val_content,v.val_img,v.val_id
    from property p
    LEFT JOIN valuess v
    ON p.prop_id=v.prop_id
    WHERE p.g_id=#{id}
  </select>

</mapper>