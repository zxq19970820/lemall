<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzl.lemall.mapper.ReviewMapper">
  <resultMap id="BaseResultMap" type="com.zzzl.lemall.domain.Review">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="review_content" jdbcType="VARCHAR" property="reviewContent" />
    <result column="review_reply" jdbcType="INTEGER" property="reviewReply" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="review_date" jdbcType="TIMESTAMP" property="reviewDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, review_content, review_reply, user_id, good_id, review_date
  </sql>
  <select id="selectByExample" parameterType="com.zzzl.lemall.domain.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzzl.lemall.domain.ReviewExample">
    delete from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzzl.lemall.domain.Review">
    insert into review (review_id, review_content, review_reply, 
      user_id, good_id, review_date
      )
    values (#{reviewId,jdbcType=INTEGER}, #{reviewContent,jdbcType=VARCHAR}, #{reviewReply,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{reviewDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzzl.lemall.domain.Review">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="reviewContent != null">
        review_content,
      </if>
      <if test="reviewReply != null">
        review_reply,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="reviewDate != null">
        review_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="reviewContent != null">
        #{reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="reviewReply != null">
        #{reviewReply,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="reviewDate != null">
        #{reviewDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzzl.lemall.domain.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=INTEGER},
      </if>
      <if test="record.reviewContent != null">
        review_content = #{record.reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewReply != null">
        review_reply = #{record.reviewReply,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.reviewDate != null">
        review_date = #{record.reviewDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      review_content = #{record.reviewContent,jdbcType=VARCHAR},
      review_reply = #{record.reviewReply,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      review_date = #{record.reviewDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzzl.lemall.domain.Review">
    update review
    <set>
      <if test="reviewContent != null">
        review_content = #{reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="reviewReply != null">
        review_reply = #{reviewReply,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="reviewDate != null">
        review_date = #{reviewDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.zzzl.lemall.domain.Review">
    update review
    set review_content = #{reviewContent,jdbcType=VARCHAR},
      review_reply = #{reviewReply,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      review_date = #{reviewDate,jdbcType=TIMESTAMP}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>




<!--  自定义-->
  <resultMap id="map1" type="com.zzzl.lemall.domain.Review">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="review_content" jdbcType="VARCHAR" property="reviewContent" />
    <result column="review_reply" jdbcType="INTEGER" property="reviewReply" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="review_date" jdbcType="TIMESTAMP" property="reviewDate" />

    <association property="user"  javaType="com.zzzl.lemall.domain.User">
      <id property="userId" column="user_id"/>

      <result property="userName" column="user_name"/>
      <result property="userIcon" column="user_icon"/>
    </association>
  </resultMap>


  <select id="selectReviewByGoodId" resultMap="map1">
    SELECT r.*,u.user_name
    FROM review r
    left JOIN `user` u
    on r.user_id=u.user_id
    WHERE r.good_id=#{id}
  </select>






</mapper>